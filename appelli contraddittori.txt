% appello(corso, data, sessione)
appello(analisi_matematica, "15/01/2023", invernale).
appello(analisi_matematica, "15/01/2023", invernale).
appello(matematica_discreta, "22/01/2023", invernale).
appello(matematica_discreta, "23/01/2023", invernale).
appello(programmazione, "28/06/2023", estiva).
appello(fisica,"28/06/2023", estiva).
appello(logica_e_reti_logiche, "19/06/2023", estiva).
appello(geometria_e_algebra, "02/07/2023", estiva).
appello(geometria_e_algebra, "05/07/2023", estiva).
appello(analisi_matematica, "11/07/2023", estiva).


appelli_con_info_contraddittorie(APPELLI_CONTRASTO):- 
    bagof([C, D, S], appello(C, D,S), TUTTI),
    tutti_in_contrasto(TUTTI, APPELLI_CONTRASTO).

tutti_in_contrasto([APPELLO1|RESTO_APPELLI], [L1|RESTO_LISTE]):-
    in_contrasto_primo([APPELLO1|RESTO_APPELLI], L1),
    tutti_in_contrasto(RESTO_APPELLI, RESTO_LISTE).

tutti_in_contrasto([], []).


in_contrasto_primo([A1, A2|T], [A12|LO]):-
    \+ compatible(A1, A2, 2),
    append([A1], [A2], A12),
    in_contrasto_primo([A1|T], LO).

in_contrasto_primo([A1,A2|T], LO):-
    compatible(A1, A2, 2),
    in_contrasto_primo([A1|T], LO).

in_contrasto_primo([_], []).
    
    


% two lists are compatible if their overlapping elements from left <= N, in this case N = 2
%because if 2 out of 3 elements of two appellos are the same, they are in contrast
compatible([], [], N):-
    N > 0.
compatible([SUBJ1|T1], [SUBJ2|T2], N):-
    N > 0,
    SUBJ1 = SUBJ2,
    !,
    M is N - 1,
    compatible(T1, T2, M).
compatible([_|T1], [_|T2], N):-
    N > 0,
    compatible(T1, T2, N).


% query: appelli_con_info_contraddittorie(APPELLI_CONTRASTO)