% film(TITOLO, ORE, COMICITA', SENTIMENTALITA', HORRITUDINE, FANTASY, VOLGARITA')
film("Jurassic Park 3",2,4,4,3,4,2).
film("Tenet",2,2,3,2,2,4).
film("Interstellar",3,2,4,5,4,5).
/*film("Never Back Down",3,2,1,1,3,3).
film("Karate Kid",2,1,1,1,1,3).
film("Now You See Me",2,2,2,1,4,3).
film("Quo Vado",2,5,3,0,0,4).
film("Ip Man",1,2,3,1,2,1).*/

film_consigliati(Utente, ListaFilmConsigliata):-
    utente_corretto(Utente),
    is_lista_film(ListaFilmConsigliata),
    lista_adatta(Utente, ListaFilmConsigliata).


utente_corretto([_,Com,Sent,Hor,Fant,Volg]):-
    Com =< 5,
    Com >= 0,
    Sent =< 5,
    Sent >= 0,
    Hor =< 5,
    Hor >= 0,
    Fant =< 5,
    Fant >= 0,
    Volg =< 5,
    Volg >= 0.

is_lista_film([]).
is_lista_film([Film1|RestFilm]):-
    setof([Tit,Ore,Com,Sent,Hor,Fant,Volg], film(Tit,Ore,Com,Sent,Hor,Fant,Volg), AllFilm),
    member(Film1, AllFilm),
    is_lista_film(RestFilm).

lista_adatta([Tempo,Com,Sent,Hor,Fant,Volg], ListaFilm):-
    no_duplicates(ListaFilm),    
    sum(ListaFilm, 2, Tempo),
    sum(ListaFilm, 3,SumCom),
    sum(ListaFilm, 4,SumSent),
    sum(ListaFilm, 5,SumHor),
    sum(ListaFilm, 6,SumFant),
    sum(ListaFilm, 7,SumVolg),
   
    length(ListaFilm, NumFilm),
    
    SumCom / NumFilm = AvgCom,
    SumSent / NumFilm = AvgSent,
    SumHor / NumFilm = AvgHor,
    SumFant / NumFilm = AvgFant,
    SumVolg / NumFilm = AvgVolg,
    
    abs(AvgCom - Com, ComDiff),
    abs(AvgSent - Sent, SentDiff),
    abs(AvgHor - Hor, HorDiff),
    abs(AvgFant - Fant, FantDiff),
    abs(AvgVolg - Volg,VolgDiff),
    
    ComDiff =< 0.5,
    SentDiff =< 0.5,
    HorDiff =< 0.5,
    FantDiff =< 0.5,
    VolgDiff =< 0.5.


    
% sum(ListList, I, Sum): true of Sum is the sum of the I-th elements in the lists of ListList
sum([], _, 0).
sum([List1|RestLists], I, Sum):-
    kth_elem(I, List1, Addendo1),
    sum(RestLists, I, SumRest),
    Sum is Addendo1 + SumRest.
    
    
    
% no_duplicates(L): true if L has no duplicates in it
no_duplicates([_]).
no_duplicates(L):-
    unique_elements(L, L).


% unique_elements(L, LU): true if LU has all elements of L but once for each
unique_elements([], []).
unique_elements([H|T], LO):-
    member(H, T),
    unique_elements(T, LO),
    !.
unique_elements([H|T], [H|LO]):-
    not(member(H, T)),
    unique_elements(T, LO).    

kth_elem(1, [X|_], X).
kth_elem(K, [_|L], X):-
    kth_elem(M, L, X),
    K is M + 1,
    K > 1.


% query: film_consigliati([4,3,3,2,3,3], L)   % ci mette tanto
& query: film_consigliati([4,3,3,2,3,3], [["Jurassic Park 3",2,4,4,3,4,2],["Tenet",2,2,3,2,2,4]]) % true

